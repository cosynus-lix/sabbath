[{
  "antecedent": "(and (= _k1 _k) (and (= _k2 _k) (and (= _m1 (* 5 _m2)) (and (> _m2 0) (and (not (= _k 0)) (>= (+ (+ (+ (+ (+ (+ (* (* _u8 _v1) _v2) (/ (* (* (* _k2 _x1) _x2) (- (* _m1 _u8) (* (* 2 _m2) _u10))) (* _m1 _m2))) (* _u10 (* _v1 (* _v1 1)))) _u1) (/ (* (* (/ 1 2) (* _v2 (* _v2 1))) (+ (+ (- (* (* _k1 _m2) _u8) (* (* _k2 _m1) _u8)) (* (* _k2 _m2) _u8)) (* (* (* 2 _k2) _m2) _u10))) (* _k2 _m1))) (/ (* (* (/ 1 2) (+ (- (* (* (* 2 _k1) _m2) _u10) (* (* _k2 _m1) _u8)) (* (* (* 2 _k2) _m2) _u10))) (* _x1 (* _x1 1))) (* _m1 _m2))) (/ (* (* (/ 1 2) (+ (- (* (* _k1 _m2) _u8) (* (* _k2 _m1) _u8)) (* (* (* 2 _k2) _m2) _u10))) (* _x2 (* _x2 1))) (* _m1 _m2))) 0))))))",
  "consequent": "(not (< (+ (+ (+ (+ (+ (+ (* (* _u8 _v1) _v2) (/ (* (* (* _k2 _x1) _x2) (- (* _m1 _u8) (* (* 2 _m2) _u10))) (* _m1 _m2))) (* _u10 (* _v1 (* _v1 1)))) _u1) (/ (* (* (/ 1 2) (* _v2 (* _v2 1))) (+ (+ (- (* (* _k1 _m2) _u8) (* (* _k2 _m1) _u8)) (* (* _k2 _m2) _u8)) (* (* (* 2 _k2) _m2) _u10))) (* _k2 _m1))) (/ (* (* (/ 1 2) (+ (- (* (* (* 2 _k1) _m2) _u10) (* (* _k2 _m1) _u8)) (* (* (* 2 _k2) _m2) _u10))) (* _x1 (* _x1 1))) (* _m1 _m2))) (/ (* (* (/ 1 2) (+ (- (* (* _k1 _m2) _u8) (* (* _k2 _m1) _u8)) (* (* (* 2 _k2) _m2) _u10))) (* _x2 (* _x2 1))) (* _m1 _m2))) 0))",
  "constraints": "true",
  "contVars": ["(declare-fun _v2 () Real)", "(declare-fun _x2 () Real)", "(declare-fun _v1 () Real)", "(declare-fun _x1 () Real)"],
  "name": "Coupled Spring-Mass System (I)",
  "predicates": ["(= (+ (* (- 1) _x1) _x2) 0)", "(= (+ _x1 (* (- 1) _x2)) 0)", "(= _v2 0)", "(= (+ (* (* (- 1) (^ _k2 (- 1))) (+ (* _k1 _x1) (* _k2 _x1))) _x2) 0)", "(= (+ _x1 (* (* (^ (+ (* (- 1) _k1) (* (- 1) _k2)) (- 1)) _k2) _x2)) 0)", "(= _v1 0)"],
  "varsDecl": ["(declare-fun _u1 () Real)", "(declare-fun _k () Real)", "(declare-fun _k1 () Real)", "(declare-fun _v2 () Real)", "(declare-fun _m2 () Real)", "(declare-fun _u10 () Real)", "(declare-fun _k2 () Real)", "(declare-fun _m1 () Real)", "(declare-fun _u8 () Real)", "(declare-fun _x1 () Real)", "(declare-fun _v1 () Real)", "(declare-fun _x2 () Real)"],
  "vectorField": ["(= (- (* (/ _k2 _m2) (- _x2 _x1))) 0)", "(= _v2 0)", "(= (- (- (* (/ _k1 _m1) _x1)) (* (/ _k2 _m1) (- _x1 _x2))) 0)", "(= _v1 0)"]
}]