import numpy as np

from fractions import Fraction
from pysmt.logics import QF_NRA
from pysmt.shortcuts import Symbol, REAL, Real, Times, Solver, get_env

from barrier.system import DynSystem
from barrier.lyapunov import validate_lyapunov, validate_lyapunov2


def main():

    x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20 = [Symbol("x%s" % (i), REAL) for i in range(21)]

    vars_list = [x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20]
    sys = DynSystem(vars_list, [], [],
                    {
                        x0 : -3.82987*x0-0.041825*x1-79.6501*x2-44.967*x3-1.01832*x4+6.17055*x5+104.408*x6-117.951*x7-74.3723*x9-1019.08*x15-1.7043*x17,
                        x1 : 0.284779*x0-1.76641*x1-10.7161*x2-34.114*x3+15.0798*x4+4.89181*x5-30.0478*x6-10.713*x9-349.432*x15-607.579*x17,
                        x2 : 6.59365*x0-217.139*x2-68.8769*x3-217.128*x9,
                        x3 : 8.45688*x0-2.65927*x1+283.779*x2-170.794*x3+1.33883*x4-285.895*x9-974.266*x17,
                        x4 : -1.12811*x0+9.5865*x1+42.3803*x2+291.71*x3-103.535*x4-77.5365*x5+0.006525*x6+42.4975*x9-919582.0*x15+3154.53*x17,
                        x5 : 3.5872*x0-1.28714*x1-134.73*x2-87.9899*x3-13.1337*x4-77.861*x5-0.000416*x6-134.799*x9-587805.0*x15-690.475*x17,
                        x6 : 0.731568*x0-0.256991*x1+0.874435*x2-1.45267*x3+46.3524*x4+0.636951*x5-205.057*x6+92.8794*x7+0.832994*x9-2850.23*x15-17.8092*x17,
                        x7 : -0.486111*x0+0.135324*x1+3.65233*x2+1.81204*x3+2.70741*x4-16.4865*x5+126.638*x6-117.343*x7-964.975*x8+2.66293*x9+1.92584*x10+0.88201*x11+54.1057*x12+1817.27*x15+13.2627*x17,
                        x8 : -0.074291*x0+0.004342*x1-0.058133*x2+0.092188*x3+0.109342*x4-0.668402*x5-0.789099*x6+62.0959*x7-42.7634*x8+0.950384*x9-1.98228*x10-0.907858*x11-55.6913*x12+157.675*x15+0.299359*x17,
                        x9 : 2.46532*x0-81.1948*x2+24.8376*x3-81.1834*x9-53.9502*x10,
                        x10 : -0.001649*x0+0.00277*x1+0.062156*x2+0.102703*x3-0.001366*x4+180.932*x9-180.87*x11-180.874*x14+1.01055*x17,
                        x11 : -0.057029*x0-0.001095*x1+2.49846*x2-0.795096*x3-0.016979*x4+0.094271*x5+0.116501*x6-8.4833*x7+11.249*x8-38.2267*x9+83.7245*x10-59.2684*x11-70.5086*x12-29.2251*x15+0.123291*x17,
                        x12 : 0.293666*x0-0.106475*x1-12.2085*x2+1.7634*x3-2.56286*x4+15.6863*x5-0.374502*x6+17.281*x7+361.637*x8-12.6925*x9+149.226*x11-125.06*x12-18.4619*x13+241.259*x14-3832.48*x15-240228.0*x16-5.05717*x17,
                        x13 : 0.882409*x0-0.328029*x1-36.7457*x2+5.20733*x3-7.89251*x4+48.3109*x5-0.881433*x6+53.1433*x7+355.97*x8-38.3769*x9-296.542*x11-53.2244*x12-99.6758*x13+102.41*x14-10633.9*x15-102239.0*x16-15.5377*x17,
                        x14 : -0.040351*x0+0.001436*x1+1.51987*x2-0.445349*x3+0.03628*x4-0.225446*x5+0.00341*x6-0.249067*x7-2.79699*x8-22.5117*x9+49.4303*x10+0.24926*x11-46.2104*x12+0.405853*x13-377.489*x14+49.679*x15+0.124281*x17,
                        x15 : -62.5*x15-0.790569*x18,
                        x16 : -31.25*x16+0.0559017*x19,
                        x17 : -31.25*x17-23.4787*x20,
                        x18 : -0.011282082705*x0+7.64770125e-05*x1+0.14564020785*x2+0.0822221595*x3+0.00186199812*x4-0.011282850675*x5-0.190910028*x6+0.2156734035*x7+0.13598975055*x9+1.86338778*x15+0.00311631255*x17,
                        x19 : -13.785571624526*x0-0.497141509575*x1+555.12786476122*x2-104.925334987*x3+0.231811890314*x4+0.10969880379*x5+1.8561445424*x6-2.0969092878*x7+408.26702299206*x9+251.407932*x10-18.117000424*x15-181.89361012654*x17,
                        x20 : -0.000512019826945*x0-0.00401589430845*x1+0.0192670655755*x2+0.06133543687*x3-0.027112801809*x4-0.00879525424855*x5+0.054024592249*x6+0.019261491915*x9+0.62826301156*x15+1.092399700945*x17
                    },
                    {})

    # construction of Lyapunov function as a symbolic expression

    m_lyap = [[ 1.40458420e-01, -7.93315283e-02, -1.15911734e-01,
        -4.97502342e-01, -1.70307477e-03,  9.84723613e-03,
         3.01060460e-02, -2.97946668e-03,  5.62570174e-01,
        -1.83646145e+00, -6.62045625e-01, -8.88517449e-01,
         1.78992100e-02, -4.30072236e-02,  4.16919240e-01,
        -6.56214593e+01,  7.26944240e+00,  3.81058206e+00,
        -1.51282117e+01,  5.50065342e-02,  2.16867771e+01],
       [-7.93315283e-02,  1.06301915e-01, -2.41399081e-01,
         1.00192673e-01, -1.60945789e-02,  1.75483890e-02,
        -7.70448871e-02, -4.48309685e-03, -1.54150646e-01,
        -6.85899762e-02,  9.31135264e-02,  1.72354983e-01,
        -3.31135774e-04, -5.39488525e-04, -5.50314138e-02,
         7.27184493e+01,  1.76250086e+00, -4.29788767e+00,
         2.25899163e+01, -8.60859090e-02, -2.66435717e+01],
       [-1.15911734e-01, -2.41399081e-01,  3.34054417e+01,
        -2.53039389e-01,  2.63015404e-01, -3.54870141e-01,
        -1.33954839e-01, -3.82104434e-01,  4.80422140e+00,
         1.64283060e+01, -2.66007616e+00, -6.46451873e+00,
        -2.21068536e-01,  4.92728268e-01,  2.44875855e+00,
        -1.66917787e+02, -1.16063565e+02, -1.96133987e+01,
        -1.74632428e+01,  8.46727902e-01,  4.66898459e+01],
       [-4.97502342e-01,  1.00192673e-01, -2.53039389e-01,
         5.29412439e+00, -1.80494759e-01,  2.70700587e-01,
         1.70522895e-01, -1.24673269e+00, -8.25628025e-01,
         1.10868566e+01,  4.23796447e+00, -1.55435261e-01,
         1.52847628e-01, -4.10637757e-01, -5.92239050e-01,
         5.11040988e+01,  3.60993562e+01, -1.11244817e+01,
        -3.87053479e-01, -5.35504786e-01, -3.42608977e+01],
       [-1.70307477e-03, -1.60945789e-02,  2.63015404e-01,
        -1.80494759e-01,  6.66073337e-02, -9.12771571e-02,
        -3.76135095e-02,  1.20987361e-01, -5.55845268e-01,
         8.26766625e-02,  7.41583875e-02,  6.87115981e-01,
        -5.36741649e-02,  1.46813518e-01, -1.10660453e-01,
        -2.73359771e+01, -8.69483900e+00,  2.77310177e+00,
        -3.17405489e+00, -3.42493112e-02,  5.77619822e+00],
       [ 9.84723613e-03,  1.75483890e-02, -3.54870141e-01,
         2.70700587e-01, -9.12771571e-02,  1.45523796e-01,
         5.33467121e-03, -2.06987174e-01,  9.94472918e-01,
        -9.13210041e-02, -9.74345360e-02, -1.09544247e+00,
         1.00093340e-01, -2.32273449e-01,  1.03237603e-01,
         1.65508178e+01,  5.50152229e+00, -4.12625317e+00,
         2.90872712e+00,  6.97595555e-02, -7.77923099e+00],
       [ 3.01060460e-02, -7.70448871e-02, -1.33954839e-01,
         1.70522895e-01, -3.76135095e-02,  5.33467121e-03,
         7.32698766e-01, -3.31411411e-01, -2.05893343e+00,
         8.34960047e-02,  3.59801611e-01,  1.08165176e-01,
         1.34378313e-02, -1.59957887e-01,  8.67084988e-01,
         6.23176613e+01,  2.28207744e+01,  4.27978204e+00,
        -2.03490980e+01,  5.01825245e-02,  2.74894202e+01],
       [-2.97946668e-03, -4.48309685e-03, -3.82104434e-01,
        -1.24673269e+00,  1.20987361e-01, -2.06987174e-01,
        -3.31411411e-01,  2.21632119e+00,  2.51046547e-01,
        -4.92488407e-01, -1.42946781e+00,  4.40348904e+00,
        -2.00621940e-01,  4.35871221e-01, -6.04774655e-01,
        -3.39523779e+00, -6.52264870e+01,  8.58607107e-01,
         1.15812058e+00, -1.09021201e-03,  2.66342032e+00],
       [ 5.62570174e-01, -1.54150646e-01,  4.80422140e+00,
        -8.25628025e-01, -5.55845268e-01,  9.94472918e-01,
        -2.05893343e+00,  2.51046547e-01,  2.58452695e+01,
        -4.23842244e+00, -5.27492021e+00, -1.32894073e+01,
         8.43646384e-01, -1.34753755e+00, -4.19663591e+00,
        -4.56534150e+02, -2.72511043e+02, -2.11006296e+01,
        -1.95764244e+01,  4.06732607e-01,  2.33366157e+01],
       [-1.83646145e+00, -6.85899762e-02,  1.64283060e+01,
         1.10868566e+01,  8.26766625e-02, -9.13210041e-02,
         8.34960047e-02, -4.92488407e-01, -4.23842244e+00,
         1.00668820e+02,  1.49876530e+01,  1.06627894e+01,
         2.36350009e-01,  2.60188980e-01, -6.13201072e+00,
        -4.88044452e+02, -1.07015060e+03, -1.63584148e+01,
        -9.04348591e+01,  1.07768030e+01, -3.29628001e+01],
       [-6.62045625e-01,  9.31135264e-02, -2.66007616e+00,
         4.23796447e+00,  7.41583875e-02, -9.74345360e-02,
         3.59801611e-01, -1.42946781e+00, -5.27492021e+00,
         1.49876530e+01,  7.93287441e+00,  6.26537985e+00,
        -2.48853109e-01,  1.01343456e-01, -5.96222382e+00,
        -4.81029444e+01,  1.33134368e+02,  5.04593336e+00,
        -7.94706706e+00,  3.54819113e-02, -2.21676440e+01],
       [-8.88517449e-01,  1.72354983e-01, -6.46451873e+00,
        -1.55435261e-01,  6.87115981e-01, -1.09544247e+00,
         1.08165176e-01,  4.40348904e+00, -1.32894073e+01,
         1.06627894e+01,  6.26537985e+00,  2.82115669e+01,
        -7.94277559e-01,  1.96155316e+00, -1.27422780e+01,
         1.21586859e+02, -3.72240343e+02,  1.80692301e+01,
         1.31395858e+01, -4.23999656e-01, -3.04842142e+01],
       [ 1.78992100e-02, -3.31135774e-04, -2.21068536e-01,
         1.52847628e-01, -5.36741649e-02,  1.00093340e-01,
         1.34378313e-02, -2.00621940e-01,  8.43646384e-01,
         2.36350009e-01, -2.48853109e-01, -7.94277559e-01,
         3.18897697e-01, -1.91095516e-01,  5.73961865e-01,
         1.57667358e+01, -2.36707592e+01, -2.61104140e+00,
        -2.48284945e-02,  1.48999033e-01, -2.64178537e+00],
       [-4.30072236e-02, -5.39488525e-04,  4.92728268e-01,
        -4.10637757e-01,  1.46813518e-01, -2.32273449e-01,
        -1.59957887e-01,  4.35871221e-01, -1.34753755e+00,
         2.60188980e-01,  1.01343456e-01,  1.96155316e+00,
        -1.91095516e-01,  4.71599249e-01, -3.95130331e-01,
        -1.24355665e+01, -1.55284430e+01,  6.03905763e+00,
        -1.43475844e-01, -1.53676313e-01,  6.21565481e+00],
       [ 4.16919240e-01, -5.50314138e-02,  2.44875855e+00,
        -5.92239050e-01, -1.10660453e-01,  1.03237603e-01,
         8.67084988e-01, -6.04774655e-01, -4.19663591e+00,
        -6.13201072e+00, -5.96222382e+00, -1.27422780e+01,
         5.73961865e-01, -3.95130331e-01,  4.25161031e+01,
         1.19422157e+02, -3.17369085e+02, -3.07784431e+00,
         3.51672054e+00, -7.48529729e-02,  1.31375377e+01],
       [-6.56214593e+01,  7.27184493e+01, -1.66917787e+02,
         5.11040988e+01, -2.73359771e+01,  1.65508178e+01,
         6.23176613e+01, -3.39523779e+00, -4.56534150e+02,
        -4.88044452e+02, -4.81029444e+01,  1.21586859e+02,
         1.57667358e+01, -1.24355665e+01,  1.19422157e+02,
         2.51785791e+05,  2.50914758e+04, -4.22337544e+03,
         1.83541728e+04, -1.22224481e+02, -1.32559297e+04],
       [ 7.26944240e+00,  1.76250086e+00, -1.16063565e+02,
         3.60993562e+01, -8.69483900e+00,  5.50152229e+00,
         2.28207744e+01, -6.52264870e+01, -2.72511043e+02,
        -1.07015060e+03,  1.33134368e+02, -3.72240343e+02,
        -2.36707592e+01, -1.55284430e+01, -3.17369085e+02,
         2.50914758e+04,  2.46547972e+05, -2.89956008e+02,
         2.77104991e+01, -2.26599475e+02,  2.12683916e+02],
       [ 3.81058206e+00, -4.29788767e+00, -1.96133987e+01,
        -1.11244817e+01,  2.77310177e+00, -4.12625317e+00,
         4.27978204e+00,  8.58607107e-01, -2.11006296e+01,
        -1.63584148e+01,  5.04593336e+00,  1.80692301e+01,
        -2.61104140e+00,  6.03905763e+00, -3.07784431e+00,
        -4.22337544e+03, -2.89956008e+02,  1.24007871e+03,
        -1.04203076e+03,  4.90061952e-01,  2.19904632e+03],
       [-1.51282117e+01,  2.25899163e+01, -1.74632428e+01,
        -3.87053479e-01, -3.17405489e+00,  2.90872712e+00,
        -2.03490980e+01,  1.15812058e+00, -1.95764244e+01,
        -9.04348591e+01, -7.94706706e+00,  1.31395858e+01,
        -2.48284945e-02, -1.43475844e-01,  3.51672054e+00,
         1.83541728e+04,  2.77104991e+01, -1.04203076e+03,
         7.74917038e+03, -2.37837276e+01, -1.05048120e+04],
       [ 5.50065342e-02, -8.60859090e-02,  8.46727902e-01,
        -5.35504786e-01, -3.42493112e-02,  6.97595555e-02,
         5.01825245e-02, -1.09021201e-03,  4.06732607e-01,
         1.07768030e+01,  3.54819113e-02, -4.23999656e-01,
         1.48999033e-01, -1.53676313e-01, -7.48529729e-02,
        -1.22224481e+02, -2.26599475e+02,  4.90061952e-01,
        -2.37837276e+01,  2.52192857e+00,  1.52206082e+01],
       [ 2.16867771e+01, -2.66435717e+01,  4.66898459e+01,
        -3.42608977e+01,  5.77619822e+00, -7.77923099e+00,
         2.74894202e+01,  2.66342032e+00,  2.33366157e+01,
        -3.29628001e+01, -2.21676440e+01, -3.04842142e+01,
        -2.64178537e+00,  6.21565481e+00,  1.31375377e+01,
        -1.32559297e+04,  2.12683916e+02,  2.19904632e+03,
        -1.05048120e+04,  1.52206082e+01,  2.14338873e+04]]

    app = []
    for i in range(len(vars_list)):
        e1 = Real(0)
        for j in range(len(vars_list)):
            e1 = e1 + Times(vars_list[j], Real(m_lyap[j][i]))
        app.append(e1)

    e1 = Real(0)
    for j in range(len(vars_list)):
        e1 = e1 + app[j] * vars_list[j]

#    print(e1.serialize())

    # solver selection
    name = "cvc5"
    path = ["cvc5"]
    logics = [QF_NRA]

    #name = "mathsat"
    #path = ["mathsat"]
    #logics = [QF_NRA]

    env = get_env()
    env.factory.add_generic_solver(name, path, logics)
    solver = Solver(name=name, logic=QF_NRA)

    # verification
    is_valid = validate_lyapunov2(sys, e1, solver)
    print("Is valid: ", is_valid)


if __name__ == "__main__":
    main()
