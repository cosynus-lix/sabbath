{
  "candidate": "(and (and (and (and (and true (= (+ (* _d1 (* _d1 1)) (* _d2 (* _d2 1))) (+ (* (_old _d1) (* (_old _d1) 1)) (* (_old _d2) (* (_old _d2) 1))))) (= (- (- (+ (* _w1 _x2) _d1) (* _w1 (_old _x2))) (_old _d1)) 0)) (= (- (+ (+ (- (* _w1 _x1)) _d2) (* _w1 (_old _x1))) (_old _d2)) 0)) (= (- (- (- (+ (+ (+ (+ (- (* _w1 _x1)) (* _w1 _x2)) _d1) _d2) (* _w1 (_old _x1))) (* _w1 (_old _x2))) (_old _d1)) (_old _d2)) 0)) (exists ((_g1 Real) (_g2 Real) (_g3 Real) (_g4 Real)) (and (= (+ (+ (+ (* _g1 _d1) (* _g2 _d2)) (* _g3 _e1)) (* _g4 _e1)) 0) (= (- (+ (- (* _g2 _d1) (* _g1 _d2)) (* _g4 _e1)) (* _g3 _e2)) 0))))",
  "constraints": "(and (and (and (and (and true (= (+ (* _d1 (* _d1 1)) (* _d2 (* _d2 1))) (+ (* (_old _d1) (* (_old _d1) 1)) (* (_old _d2) (* (_old _d2) 1))))) (= (- (- (+ (* _w1 _x2) _d1) (* _w1 (_old _x2))) (_old _d1)) 0)) (= (- (+ (+ (- (* _w1 _x1)) _d2) (* _w1 (_old _x1))) (_old _d2)) 0)) (= (- (- (- (+ (+ (+ (+ (- (* _w1 _x1)) (* _w1 _x2)) _d1) _d2) (* _w1 (_old _x1))) (* _w1 (_old _x2))) (_old _d1)) (_old _d2)) 0)) (exists ((_g1 Real) (_g2 Real) (_g3 Real) (_g4 Real)) (and (= (+ (+ (+ (* _g1 _d1) (* _g2 _d2)) (* _g3 _e1)) (* _g4 _e1)) 0) (= (- (+ (- (* _g2 _d1) (* _g1 _d2)) (* _g4 _e1)) (* _g3 _e2)) 0))))",
  "contVars": ["(declare-fun _e2 () Real)", "(declare-fun _e1 () Real)", "(declare-fun _y2 () Real)", "(declare-fun _y1 () Real)", "(declare-fun _d2 () Real)", "(declare-fun _d1 () Real)", "(declare-fun _x2 () Real)", "(declare-fun _x1 () Real)"],
  "name": "Collision Avoidance Maneuver (III)",
  "varsDecl": ["(declare-fun _e1 () Real)", "(declare-fun _e2 () Real)", "(declare-fun _g3 () Real)", "(declare-fun _w2 () Real)", "(declare-fun _d2 () Real)", "(declare-fun _d1 () Real)", "(declare-fun _g1 () Real)", "(declare-fun _g2 () Real)", "(declare-fun _w1 () Real)", "(declare-fun _x1 () Real)", "(declare-fun _g4 () Real)", "(declare-fun _x2 () Real)", "(declare-fun _old (Real) Real)"],
  "vectorField": ["(= _d1 0)", "(= _d2 0)", "(= (- (* _w1 _d2)) 0)", "(= (* _w1 _d1) 0)", "(= _e1 0)", "(= _e2 0)", "(= (- (* _w2 _e2)) 0)", "(= (* _w2 _e1) 0)"]
}